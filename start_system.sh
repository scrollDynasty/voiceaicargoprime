#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ Voice AI —Å–∏—Å—Ç–µ–º—ã —Å WebPhone –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π
# Prime Cargo Logistics

echo "üöÄ –ó–∞–ø—É—Å–∫ Voice AI —Å–∏—Å—Ç–µ–º—ã —Å WebPhone –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π..."
echo "================================================"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_command() {
    if ! command -v $1 &> /dev/null; then
        echo "‚ùå $1 –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ $1"
        exit 1
    fi
}

echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
check_command node
check_command npm
check_command python3
check_command pip3

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p logs
mkdir -p recordings
mkdir -p temp

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üêç –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
pip3 install -r requirements.txt

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è WebPhone
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
cd webphone-bridge
npm install
cd ..

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ –≤ —Ñ–æ–Ω–µ
run_background() {
    local name=$1
    local command=$2
    local dir=$3
    
    echo "‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫ $name..."
    
    if [ -n "$dir" ]; then
        cd "$dir"
    fi
    
    $command > ../logs/$name.log 2>&1 &
    local pid=$!
    echo $pid > ../logs/$name.pid
    
    if [ -n "$dir" ]; then
        cd ..
    fi
    
    echo "‚úÖ $name –∑–∞–ø—É—â–µ–Ω (PID: $pid)"
    
    # –ù–µ–±–æ–ª—å—à–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
    sleep 1
    if kill -0 $pid 2>/dev/null; then
        echo "  ‚úì –ü—Ä–æ—Ü–µ—Å—Å –∞–∫—Ç–∏–≤–µ–Ω"
    else
        echo "  ‚ùå –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ"
        return 1
    fi
}

# –ó–∞–ø—É—Å–∫ Python —Å–µ—Ä–≤–µ—Ä–∞
run_background "python-server" "python3 webhook_server.py"

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ Python —Å–µ—Ä–≤–µ—Ä–∞
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Python —Å–µ—Ä–≤–µ—Ä–∞..."
sleep 5

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ Python —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
if curl -s http://localhost:5000/health > /dev/null; then
    echo "‚úÖ Python —Å–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω"
else
    echo "‚ùå Python —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    exit 1
fi

# –ó–∞–ø—É—Å–∫ WebPhone Bridge
run_background "webphone-bridge" "node webphone_bridge.js" "webphone-bridge"

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ WebPhone
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ WebPhone Bridge..."
sleep 5

echo ""
echo "================================================"
echo "‚úÖ Voice AI —Å–∏—Å—Ç–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞!"
echo ""
echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:"
echo "   Python AI Server: http://localhost:5000"
echo "   WebSocket Audio: ws://localhost:8080"
echo "   Health Check: http://localhost:5000/health"
echo "   WebPhone Status: http://localhost:5000/api/webphone/status"
echo ""
echo "üìû –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–≤–æ–Ω–∫–∏!"
echo ""
echo "üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ./stop_system.sh"
echo "================================================"

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ª–æ–≥–æ–≤
echo ""
echo "üìú –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ª–æ–≥–æ–≤ (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞):"
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞ –ª–æ–≥–æ–≤
monitor_logs() {
    tail -f logs/python-server.log logs/webphone-bridge.log | while read line; do
        if [[ $line == *"ERROR"* ]] || [[ $line == *"‚ùå"* ]]; then
            echo -e "\033[31m$line\033[0m"  # –ö—Ä–∞—Å–Ω—ã–π –¥–ª—è –æ—à–∏–±–æ–∫
        elif [[ $line == *"SUCCESS"* ]] || [[ $line == *"‚úÖ"* ]]; then
            echo -e "\033[32m$line\033[0m"  # –ó–µ–ª–µ–Ω—ã–π –¥–ª—è —É—Å–ø–µ—Ö–∞
        elif [[ $line == *"INFO"* ]] || [[ $line == *"üìû"* ]]; then
            echo -e "\033[36m$line\033[0m"  # –ì–æ–ª—É–±–æ–π –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        else
            echo "$line"
        fi
    done
}

monitor_logs