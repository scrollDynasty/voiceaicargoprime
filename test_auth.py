#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç RingCentral JWT –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
–ó–∞–ø—É—Å–∫: python test_auth.py
"""

import asyncio
import logging
import os
import sys
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.StreamHandler(sys.stdout)
    ]
)

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞"""
    print("=" * 60)
    print("üß™ RingCentral JWT Authentication Test")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ JWT —Ç–æ–∫–µ–Ω–∞
    jwt_token = os.getenv('RINGCENTRAL_JWT_TOKEN')
    if jwt_token:
        print(f"‚úÖ JWT Token found (length: {len(jwt_token)} chars)")
    else:
        print("‚ùå JWT Token NOT found in environment")
    
    print(f"üìã Auth Method: {os.getenv('RINGCENTRAL_AUTH_METHOD', 'jwt')}")
    print("=" * 60)
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
    try:
        from ringcentral_client import test_ringcentral_auth
        result = await test_ringcentral_auth()
        
        print("=" * 60)
        if result:
            print("‚úÖ TEST PASSED - Authentication successful!")
        else:
            print("‚ùå TEST FAILED - Authentication failed!")
        print("=" * 60)
        
        return result
        
    except Exception as e:
        print(f"‚ùå TEST ERROR: {e}")
        print("=" * 60)
        return False

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
    success = asyncio.run(main())
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–¥ –≤—ã—Ö–æ–¥–∞
    sys.exit(0 if success else 1)