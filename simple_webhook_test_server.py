#!/usr/bin/env python3
"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π webhook —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ö–æ–¥—è—â–∏—Ö –∑–≤–æ–Ω–∫–æ–≤
"""

import json
import logging
import requests
from flask import Flask, request, jsonify
from flask_cors import CORS

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

app = Flask(__name__)
CORS(app)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
JS_SERVER_URL = "http://localhost:8081"

@app.route('/webhook', methods=['POST'])
def webhook():
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ webhook —Å–æ–±—ã—Ç–∏–π –æ—Ç RingCentral"""
    try:
        data = request.get_json()
        logger.info(f"üìû –ü–æ–ª—É—á–µ–Ω–æ webhook —Å–æ–±—ã—Ç–∏–µ: {json.dumps(data, indent=2)}")
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º webhook —Å–æ–±—ã—Ç–∏–µ
        try:
            response = requests.post(
                f"{JS_SERVER_URL}/webhook",
                json=data,
                timeout=5
            )
            logger.info(f"‚úÖ Webhook –ø–µ—Ä–µ—Å–ª–∞–Ω –≤ JS —Å–µ—Ä–≤–µ—Ä: {response.status_code}")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –≤ JS —Å–µ—Ä–≤–µ—Ä: {e}")
        
        return jsonify({"status": "ok"}), 200
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook: {e}")
        return jsonify({"error": str(e)}), 500

@app.route('/health', methods=['GET'])
def health():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞"""
    return jsonify({"status": "ok", "message": "Webhook server is running"}), 200



if __name__ == '__main__':
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ webhook —Å–µ—Ä–≤–µ—Ä–∞...")
    logger.info(f"üîó JS Server URL: {JS_SERVER_URL}")
    
    app.run(
        host='0.0.0.0',
        port=5000,
        debug=False
    )